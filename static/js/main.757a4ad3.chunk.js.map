{"version":3,"sources":["components/FilterConfig.js","components/TodoForm.js","components/TodoStarIcon.js","components/TodoItem.js","components/TodoControl.js","App.js","serviceWorker.js","index.js"],"names":["VISIBILITY_ALL","VISIBILITY_ACTIVE","VISIBILITY_COMPLETED","TodoForm","state","todoInput","handleChange","event","_this","setState","target","value","handleKeyPress","key","newTodo","id","window","todoStorage","uid","title","starred","completed","props","addTodoHandler","react_default","a","createElement","className","type","placeholder","this","onChange","onKeyPress","Component","TodoStarIcon","iconStarred","todo","onClickHandler","original","Object","objectSpread","replaceTodo","iconClass","onClick","dangerouslySetInnerHTML","__html","TodoItem","isCompleted","checked","oldTodo","defaultChecked","components_TodoStarIcon","TodoControl","visibility","FilterConfig","setVisibilityToAll","updateVisibility","setVisibilityToActive","setVisibilityToCompleted","removeCompletedTodos","getActiveTodos","length","href","counterCompleted","App","todos","fetch","addTodo","todoObj","console","log","concat","toConsumableArray","indexOf","onlyActiveTodos","sortStarredTodosFirst","newVisibility","filter","sort","b","counterActiveStarred","getActiveStarred","save","getCompletedTodos","getAllTodos","active","_this2","rel","src","alt","components_TodoForm","getFilteredTodos","map","index","components_TodoItem","components_TodoControl","Boolean","location","hostname","match","JSON","parse","localStorage","getItem","forEach","setItem","stringify","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.757a4ad3.chunk.js","sourcesContent":["export const VISIBILITY_ALL = \"all\";\nexport const VISIBILITY_ACTIVE = \"active\";\nexport const VISIBILITY_COMPLETED = \"completed\";\n","import React, {Component} from 'react';\n\nclass TodoForm extends Component {\n  state = {todoInput: ''};\n\n  handleChange = event => {\n    this.setState({todoInput: event.target.value});\n  };\n\n  handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      const newTodo = {\n        id: window.todoStorage.uid++,\n        title: this.state.todoInput,\n        starred: 0,\n        completed: false,\n      };\n\n      this.props.addTodoHandler(newTodo);\n      this.setState({todoInput: ''});\n    }\n  };\n\n  render() {\n    return (\n      <input className=\"new-todo\" type=\"text\" placeholder=\"What needs to be done?\"\n             value={this.state.todoInput}\n             onChange={this.handleChange}\n             onKeyPress={this.handleKeyPress}/>\n    );\n  }\n}\n\nexport default TodoForm;\n","import React, {Component} from \"react\";\n\nclass TodoStarIcon extends Component {\n  state = {\n    iconStarred: this.props.todo.starred,\n  };\n\n\n  onClickHandler = () => {\n    const original = {...this.props.todo};\n\n    this.props.todo.starred = +!original.starred;\n    this.props.replaceTodo(original, this.props.todo);\n\n    this.setState({\n      iconStarred: this.props.todo.starred,\n    });\n  };\n\n  render() {\n    const iconClass = this.state.iconStarred ? (this.props.todo.completed ? 'starred starred_completed' : 'starred') : 'star';\n\n    return (\n      <span className={iconClass}\n            onClick={this.onClickHandler}\n            dangerouslySetInnerHTML={{\n              __html: this.state.iconStarred\n                ? \"<svg width=\\\"22px\\\" height=\\\"44px\\\" viewBox=\\\"0 0 22 44\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;\\\"> <g> <path d=\\\"M0,0l0,40.5c0,0.28 0.22,0.42 0.48,0.32l10.04,-3.64c0.28,-0.1 0.7,-0.1 0.96,0l10.04,3.64c0.28,0.1 0.48,-0.04 0.48,-0.32l0,-40.5l-22,0ZM14.46,24.08l1.68,5.26c0.08,0.18 0,0.38 -0.16,0.5c-0.14,0.1 -0.36,0.1 -0.52,0l-4.46,-3.24l-4.46,3.24c-0.08,0.06 -0.18,0.1 -0.28,0.1c-0.08,0 -0.18,-0.04 -0.24,-0.1c-0.16,-0.12 -0.24,-0.32 -0.16,-0.5l1.68,-5.26l-4.46,-3.24c-0.14,-0.12 -0.22,-0.32 -0.16,-0.52c0.08,-0.18 0.24,-0.32 0.44,-0.32l5.52,0l1.68,-5.24c0.14,-0.36 0.74,-0.36 0.88,0l1.7,5.24l5.5,0c0.2,0 0.36,0.14 0.44,0.32c0.06,0.2 -0.02,0.4 -0.16,0.52l-4.46,3.24Z\\\"></path> </g> </svg>\"\n                : \"<svg width=\\\"18px\\\" height=\\\"18px\\\" viewBox=\\\"0 0 18 18\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\"> <g> <path d=\\\"M3.74,18 C3.64,18 3.54,17.96 3.46,17.9 C3.28,17.76 3.2,17.54 3.28,17.34 L5.16,11.5 L0.2,7.9 C0.04,7.78 -0.04,7.56 0.02,7.34 C0.1,7.14 0.28,7 0.5,7 L6.64,7 L8.52,1.16 C8.66,0.76 9.34,0.76 9.48,1.16 L11.38,7 L17.5,7 C17.72,7 17.9,7.14 17.98,7.34 C18.04,7.56 17.96,7.78 17.8,7.9 L12.84,11.5 L14.72,17.34 C14.8,17.54 14.72,17.76 14.54,17.9 C14.38,18.02 14.14,18.02 13.96,17.9 L9,14.3 L4.04,17.9 C3.96,17.96 3.84,18 3.74,18 L3.74,18 Z M9,13.18 C9.1,13.18 9.2,13.2 9.3,13.28 L13.3,16.18 L11.78,11.46 C11.7,11.26 11.78,11.04 11.96,10.92 L15.96,8 L11,8 C10.8,8 10.6,7.86 10.54,7.66 L9,2.94 L7.46,7.66 C7.4,7.86 7.22,8 7,8 L2.04,8 L6.04,10.92 C6.22,11.04 6.3,11.26 6.22,11.46 L4.7,16.18 L8.7,13.28 C8.8,13.2 8.9,13.18 9,13.18 L9,13.18 Z\\\"></path> </g> </svg>\",\n            }}\n      />\n    );\n  }\n}\n\nexport default TodoStarIcon;\n","import React, {Component} from \"react\";\nimport TodoStarIcon from './TodoStarIcon';\n\nclass TodoItem extends Component {\n  state = {\n    completed: this.props.todo.completed,\n  };\n\n  handleChange = event => {\n    const isCompleted = event.target.checked;\n    this.setState({\n      completed: isCompleted,\n    });\n\n    const newTodo = {...this.props.todo, completed: isCompleted};\n\n    this.props.replaceTodo(this.props.todo, newTodo);\n  };\n\n  replaceTodo = (oldTodo, newTodo) => {\n    this.props.replaceTodo(oldTodo, newTodo);\n  };\n\n  render() {\n    return (\n      <li className={this.state.completed ? 'todo completed' : 'todo'}>\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\"\n                 onChange={this.handleChange}\n                 defaultChecked={this.state.completed}\n          />\n          <label>{this.props.todo.title}</label>\n          <TodoStarIcon todo={this.props.todo}\n                        replaceTodo={this.replaceTodo}\n          />\n        </div>\n        <input className=\"edit\" type=\"text\"/>\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React, {Component} from \"react\";\nimport * as FilterConfig from './FilterConfig';\n\nclass TodoControl extends Component {\n  state = {\n    visibility: this.props.visibility || FilterConfig.VISIBILITY_ALL,\n  };\n\n  setVisibilityToAll = () => {\n    this.setState({visibility: FilterConfig.VISIBILITY_ALL});\n    this.props.updateVisibility(FilterConfig.VISIBILITY_ALL);\n  };\n\n  setVisibilityToActive = () => {\n    this.setState({visibility: FilterConfig.VISIBILITY_ACTIVE});\n    this.props.updateVisibility(FilterConfig.VISIBILITY_ACTIVE);\n  };\n\n  setVisibilityToCompleted = () => {\n    this.setState({visibility: FilterConfig.VISIBILITY_COMPLETED});\n    this.props.updateVisibility(FilterConfig.VISIBILITY_COMPLETED);\n  };\n\n  removeCompletedTodos = () => {\n    this.props.removeCompletedTodos();\n    this.setVisibilityToAll();\n  };\n\n  render() {\n    return (\n      <div>\n        <span className=\"todo-count\">\n          <strong>{this.props.getActiveTodos().length}</strong> items left\n        </span>\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/all\"\n               className={this.state.visibility === FilterConfig.VISIBILITY_ALL ? \"selected\" : \"\"}\n               onClick={this.setVisibilityToAll}>All</a>\n          </li>\n          <li>\n            <a href=\"#/all\"\n               className={this.state.visibility === FilterConfig.VISIBILITY_ACTIVE ? \"selected\" : \"\"}\n               onClick={this.setVisibilityToActive}>Active</a>\n          </li>\n          {this.props.counterCompleted > 0 &&\n          <li>\n            <a href=\"#/all\"\n               className={this.state.visibility === FilterConfig.VISIBILITY_COMPLETED ? \"selected\" : \"\"}\n               onClick={this.setVisibilityToCompleted}>Completed</a>\n          </li>\n          }\n        </ul>\n        <button className=\"clear-completed\" onClick={this.removeCompletedTodos}>Clear completed</button>\n      </div>\n    );\n  };\n}\n\nexport default TodoControl;\n","import React, {Component} from \"react\";\nimport \"./App.css\";\nimport * as FilterConfig from \"./components/FilterConfig\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoItem from \"./components/TodoItem\";\nimport TodoControl from \"./components/TodoControl\";\n\nclass App extends Component {\n  state = {\n    todos: window.todoStorage.fetch() || [],\n    visibility: FilterConfig.VISIBILITY_ALL || \"all\",\n  };\n\n  componentDidUpdate() {\n    window.todoStorage.save(this.state.todos);\n  }\n\n  addTodo = (todoObj) => {\n    console.log('append new todo', todoObj);\n    this.setState({\n      todos: [todoObj, ...this.state.todos],\n    });\n  };\n\n  replaceTodo = (oldTodo, newTodo) => {\n    const todos = [...this.state.todos];\n\n    todos[todos.indexOf(oldTodo)] = newTodo;\n\n    this.setState({\n      todos: todos,\n    });\n  };\n\n  removeCompletedTodos = () => {\n    const onlyActiveTodos = this.sortStarredTodosFirst(this.getActiveTodos());\n    this.setState({\n      todos: onlyActiveTodos,\n    });\n  };\n\n  updateVisibility = (newVisibility) => {\n    this.setState({\n      visibility: newVisibility,\n    });\n  };\n\n  getFilteredTodos() {\n    switch (this.state.visibility) {\n      case FilterConfig.VISIBILITY_ACTIVE:\n        return this.getActiveTodos();\n      case FilterConfig.VISIBILITY_COMPLETED:\n        return this.getCompletedTodos();\n      default:\n        return this.getAllTodos();\n    }\n  }\n\n  getAllTodos() {\n    const active = this.getActiveTodos();\n    const completed = this.getCompletedTodos();\n\n    return active.concat(completed);\n  }\n\n  getCompletedTodos() {\n    const filtered = this.state.todos.filter(todo => todo.completed === true);\n    return filtered.sort((a, b) => a.id - b.id);\n  }\n\n  getActiveTodos = () => {\n    const activeTodos = this.state.todos.filter(todo => todo.completed === false);\n\n    return activeTodos.sort((a, b) => b.starred - a.starred);\n  };\n\n  getActiveStarred() {\n    const activeTodos = this.getActiveTodos();\n\n    return activeTodos.filter(todo => todo.starred === 1);\n  }\n\n  counterActiveStarred = () => {\n    return this.getActiveStarred().length;\n  };\n\n  sortStarredTodosFirst(todos) {\n    return todos.sort((a, b) => b.starred - a.starred);\n  }\n\n  render() {\n    return (\n      <div>\n        <a href=\"https://github.com/vikbert/react-MIT-todo\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\"\n        >\n          <img className=\"avatar\"\n               src=\"https://github.githubassets.com/images/modules/site/logos/desktop-logo.png\"\n               alt=\"avatar\"\n          />\n        </a>\n        <section className=\"todoapp\">\n          <header className=\"header\">\n            <h1>{'M I T Todo'}</h1>\n            {this.state.visibility !== FilterConfig.VISIBILITY_COMPLETED && (\n              <TodoForm addTodoHandler={this.addTodo}/>\n            )}\n          </header>\n\n          <section className=\"main\">\n            <ul className=\"todo-list\">\n              {this.getFilteredTodos().map((todo, index) => {\n                return (\n                  <TodoItem\n                    key={todo.id}\n                    index={index}\n                    todo={todo}\n                    counterActiveStarred={this.counterActiveStarred}\n                    replaceTodo={this.replaceTodo}\n                  />\n                );\n              })}\n            </ul>\n          </section>\n          <footer className=\"footer\">\n            <TodoControl\n              visibility={this.state.visibility}\n              counterCompleted={this.getCompletedTodos().length}\n              removeCompletedTodos={this.removeCompletedTodos}\n              updateVisibility={this.updateVisibility}\n              getActiveTodos={this.getActiveTodos}\n            />\n          </footer>\n        </section>\n        <span>{'CSS template powered by todomvc.com®'}</span>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst STORAGE_KEY = 'REACT_APP_TODO_LIST';\nwindow.todoStorage = {\n  uid: 0,\n  fetch: function () {\n    let todos = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');\n\n    this.uid = todos.length;\n    todos.forEach(function (todo, index) {\n      todo.id = index;\n    });\n\n    return todos;\n  },\n  save: function (todos) {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(todos));\n  },\n};\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}